预加载 DNS 优化页面加载速度
================================

在构建现代 Web 应用程序时，我们通常会使用一些现代技术来提高性能。其中之一是 DNS 预取。DNS 预取是一种技术，它允许浏览器在用户单击链接之前解析链接中的域名。这样，当用户单击链接时，浏览器就可以立即加载页面，而不必等待 DNS 解析完成。

创建文件 ``dns-prefetch.js`` 并添加以下代码：

.. code-block:: javascript

    const fs = require("fs");
    const { parse } = require("node-html-parser");
    const { glob } = require("glob");
    const urlRegex = require("url-regex");

    const urls = new Set();
    async function searchDomain() {
        const files = await glob("dist/**/*.{html,js,css}", { nodir: true });
        for (const file of files) {
        const source = fs.readFileSync(file, "utf-8");
        const matches = source.match(urlRegex());
        if (matches) {
            matches.forEach((url) => {
            const domain = new URL(url).origin;
            urls.add(domain);
            });
        }
        }
    }

    async function insertLinks() {
        const files = await glob("dist/**/*.html", { nodir: true });
        for (const file of files) {
        const source = fs.readFileSync(file, "utf-8");
        const root = parse(source);
        urls.forEach((url) => {
            console.log(url);
            root
            .querySelector("head")
            .insertAdjacentHTML(
                "beforeend",
                `<link rel="dns-prefetch" href="${url}">`
            );
        });
        fs.writeFileSync(file, root.toString());
        }
    }

    async function main() {
        console.log("DNS Prefetching started");
        await searchDomain();
        await insertLinks();
        console.log("DNS Prefetching Done");
    }

    main();

然后在 ``package.json`` 中添加以下命令：

.. code-block:: json

    {
        "scripts": {
        "dns-prefetch": "node dns-prefetch.js"
        }
    }
